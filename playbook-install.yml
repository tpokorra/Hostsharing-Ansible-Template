---
- hosts: template
  become_user: "{{pac}}-{{user}}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  #################################
  ## create directories
  #################################
  - name: create directory etc
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  #################################
  ## install requirements
  #################################
  - name: Install node.js
    import_tasks: tasks/hs_nodejs.yml

  - name: Install ruby
    import_tasks: tasks/hs_ruby.yml

  - name: Install composer
    import_tasks: tasks/hs_composer.yml

  ##################################
  ## install template
  ##################################

  # TODO

  ##################################
  ## configuration
  ##################################

  - name: upload the password for the postgresql database
    become: yes
    template:
      src: "templates/pgpass"
      dest: "/home/pacs/{{pac}}/users/{{user}}/.pgpass"
      mode: "700"
  - name: upload the password for the mysql database
    become: yes
    template:
      src: "templates/my.cnf"
      dest: "/home/pacs/{{pac}}/users/{{user}}/.my.cnf"
      mode: "700"

  # TODO

  ######################
  ## initialise instance
  ######################

  # TODO

  ########################
  ## setup the apache site
  ########################

  # TODO
  - name: drop htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent
  - name: create symbolic link for htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/template/public"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link


  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"

  ##############################################
  ## start services via monit
  ##############################################
  - name: start monit
    become: yes
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"

